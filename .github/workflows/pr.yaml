on: pull_request
name: PR Review
jobs:
  test-composer-install:
    name: Validate composer (${{ matrix.php }}) / (${{ matrix.dependency-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1', '8.2', '8.3' ]
        dependency-version: [ prefer-lowest, prefer-stable ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate composer files
        run: composer validate composer.json --strict

      - name: Install dependencies
        run: |
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

  php-check-coding-standards:
    name: PHP - Check Coding Standards
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1', '8.2', '8.3' ]
        dependency-version: [ prefer-lowest, prefer-stable ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: json
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress
      - name: PHPCS
        run: |
          composer coding-standards-check

  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1', '8.2', '8.3' ]
        dependency-version: [ prefer-lowest, prefer-stable ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: json
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress
      - name: Unit tests
        run: php vendor/bin/phpunit tests --coverage-clover=coverage/unit.xml

  markdownlint:
    name: markdownlint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn packages
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Yarn install
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - run: yarn install
      - name: markdownlint
        run: yarn markdownlint README.md
